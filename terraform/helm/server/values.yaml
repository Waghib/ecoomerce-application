replicaCount: 2

image:
  repository: ecommerce-application-server
  tag: latest
  pullPolicy: Always

service:
  type: ClusterIP
  port: 5000
  targetPort: 5000
  name: ecommerce-server-server

ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
  hosts:
    - host: ""
      paths:
        - path: /api(/|$)(.*)
          pathType: Prefix
          backend:
            service:
              name: ecommerce-server-server
              port:
                number: 5000

env:
  - name: PORT
    value: "5000"
  - name: BASE_API_URL
    value: "/api"
  - name: CLIENT_URL
    value: "https://"
  - name: MONGO_URI
    valueFrom:
      secretKeyRef:
        name: mongodb-secret
        key: mongodb-uri
  - name: JWT_SECRET
    valueFrom:
      secretKeyRef:
        name: jwt-secret
        key: jwt-secret

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: /metrics
  prometheus.io/port: "5000"

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi
